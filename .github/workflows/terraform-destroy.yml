name: 'Plan And Apply'

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
    id-token: write
    contents: read  
    pull-requests: write

jobs:
  CheckTerraformCode:
    name: 'Plan And Apply'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4  

    - name: Decode OIDC token sub
      run: |
       echo "Token URL: $ACTIONS_ID_TOKEN_REQUEST_URL"
       echo "Token TOKEN: $ACTIONS_ID_TOKEN_REQUEST_TOKEN"
       ID_TOKEN=$(curl -sH "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value')
       PAYLOAD=$(echo "$ID_TOKEN" | cut -d "." -f2 | base64 -d || echo "")
       echo "$PAYLOAD" | jq '{sub, aud, exp}'
  
    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: "eu-west-3"
        audience: sts.amazonaws.com
      
    - name: Print OIDC token
      uses: actions/github-script@v6
      with:
       script: |
        const token = await core.getIDToken();
        console.log("OIDC token successfully retrieved.");

   # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    - name: Terraform destroy
      run: terraform destroy --auto-approve
